def solution (A):

    count = oldValue = 0
    world = [0]*len(A)
    intersections = sum(map (min, enumerate(A)))

    for (index, item) in enumerate(A):
        if intersections > 10000000:
            return -1
        if index + item < len(A):
            world[index+item] += 1

        value = max (0,index - item)
        direction = (oldValue < value) * 2 - 1  #   -1 or 1
        count += direction * sum(world[min(oldValue,value):max(oldValue,value)])

        intersections += value - count
        oldValue = value
        
    return intersections
